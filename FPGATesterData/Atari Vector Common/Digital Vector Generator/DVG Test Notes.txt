[VG Reset]
This test resets the vector generator hardware by writing to the reset address.

This does not run any vector state machine commands (no VGGO) so you will not see any pulse width information since HALT does not pulse.

Note there is no reset on asteroids and lunar lander - if it gets stuck you have to enable the watchdog then disable it or push the button so that it resets the VG.
Or for Asteroids or Lunar Lander it might be possible to jumper L6 pin 5 to  reset (D4 pin 8)
[VG Center]
On the DVG this runs sets the X,Y output to the center of the screen (512,512).
It also sets the global scale to 0

Typical halt time is 6.85us
[VG Halt Test]
This runs just a single HALT instruction - check that the VG halt lights after this is run
The halt test should run for about 3.55 us on the DVG
This is normally the first test to run (or second after VG reset).  If this fails to run (the VG does not halt after running this) it is a good idea to find the problem before proceeding with other tests.

On asteroids earlier boards (not -05 or -06) you should connect the SA START input to HALT at A9 pin 10 (this is a LS109 flip flop).  On -05 and -06 asteroids this is at location A10 

Don't forget to disable the watchdog since it will reset the vector generator during the tests!
[VG DrawShort from Ram]
Draw some short vectors (an asteroid) on the screen then halt
Typically 637.5 microseconds with a global scale of 0
[VG Draw from RAM]
This draws the test grid and intensity bars from Asteroids.  Typical time is 9838us
[VG Draw Single Short Vec frm Ram]
This will draw a single short vector according to your inputs.
The vector length does not change the halt time.

Note that the center and the draw commands except for the single vector draws set the scale to 0 when they are done.  
Halt times for a global scale of 0:
Scale  Halt Time
0            11.5
1            16.775
2            27.375
3            48.55
[VG DrawShort from Ram BIG]
This is useful for testing the program counters.  
It will create a certain number of copies of the drawshort commands which you can use to fill up the vector ram to check that the program counters are able to go all the way to the end.  You can start with a smaller number of copies and get bigger which will use more and more bits of the program counter. 
For the DVG, 68 copies of the drawshort BIG is 2041 bytes, so it covers the whole RAM (68 is the max copies for asteroids, etc)

1 copy takes about 637.5us
[VG Draw Single Long Vec]
Draw a single long vector according to your inputs.
This will overdrive a monitor so don't run any of these tests with a monitor connected especially this one!
Here are times for various scales with a global scale of 0
Note that the center and the draw commands except for the single vector draws set the scale to 0 when they are done.  
scale Time (us) (should be within about .2us of these numbers)
0     8.85
1     10.175
2     12.8
3     18.1
4     28.7
5     49.9
6     92.2
7    176.9
8    346.35
9    685.18
[VG JMP test RAM]
This jumps around a few times to check the loading of the program counters.  
Typical 1893us
[VG JSR to address]
This will JSR to a certain address which you have to know beforehand (typically in ROM).
0x862 is the copyright in Asteroids

NOTE: The addresses for the vector generator correspond to the 16 bit word addressthat is in the vector generator program counter.  Games with the AVG customhave 13 bit addresses (so up to 8K words or 16K bytes), and others have 12 bit addresses (up to 4K words or 8K bytes).  

So for example 0x1000 in Star Wars is really 0x2000 in the CPU's vector memorysince the CPU addresses correspond to bytes.  There is also an offset in most games since the vector memory does not start at zero in the CPU address spacebut it always starts at zero in the vector generator memory space.
[VG JMP only no draw]
This creates instructions which just jump to the next address.  
Specify the number of copies in the control.  
You can use this to check that the program counters make it all the way to the end without doing any drawing.  
It should take about 2us per copy.
[Set Scale]
Use the BinScale control to set the global scale for the vector generator.

Note that the center and the draw commands except for the single vector draws set the scale to 0 when they are done.  You can set the scale here and then go to either of the single vector commands to see that this scale will add to the scale you set for the vectors commands.

Using a logic probe, you can read this scale on pins 15,2,10,7 (scale 0 - scale 3) on M7 on Asteroids or M6 on Asteroids Deluxe (LS175)

Halt time 6.85us
[JSR Test]
This will perform a series of JSR instructions that are nested to a certain level.  You should see numbers on the oscilloscope screen showing the jump level.  DVG games can do 4 levels of nesting.  I've seen one asteroids run OK but fail above 2 levels so the game might not use all 4 levels of stack!

You can set the 1st JSR address to be further down in RAM since sometimes the upper-address-bits will be bad in the stack and the lower bits OK.  Just be sure you don't go past the end of RAM.
The address here is in AVG memory space (0 is the beginning of the VG RAM)
[Run from File]
For this test you can load a dump of a vector memory file (in binary format) and then run it on your board.
[Set color/intensity]
Not used on DVG
[VGGO only]
This just strobes VGGO with whatever was already loaded in memory hopefully still being there.
This is useful if you have loaded a memory image and don't want to keep loading it to show it over and over again.
[Run from Trace Setup]
This will run the "vector program" from the trace setup screen.  
You can enter your own program, press "assemble" and then come back here to run it.
